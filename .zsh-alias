#
# Configuration is very miniscule but it does the job both for faint tty sessions and in
# interactive colored terminal emulators. If Powerlevel10k is available it is sourced.
# If not fallback prompt is available.
#
# Author: Mikael Henriksson (www.github.com/miklhh)
#


# ------------------------------------------------------------------------------------ #
# --                                Settings for ls                                 -- #
# ------------------------------------------------------------------------------------ #

local _GNU_LS_FLAGS=(
    '--classify'
    '--color'
    '--group-directories-first'
    '--human-readable'
)
function ls_gnu_linux {
    ls ${_GNU_LS_FLAGS[@]} "${@}"
}
function ls_gnu_darwin {
    gls ${_GNU_LS_FLAGS[@]} "${@}"
}
function ls_bsd {
    ls -G "${@}"
}

if [ $(uname -s) = "Darwin" ]
then
    if command -v gls 1>/dev/null 2>&1; then
        alias ls=ls_gnu_darwin
        compdef ls_gnu_darwin=ls
    else
        echo "[ .zsh-alias:${LINENO} ]:" \
             "Warning: 'GNU coreutils' not installed, using 'BSD ls'"
        alias ls=ls_bsd
        compdef ls_bsd=ls
    fi
else
    alias ls=ls_gnu_linux
    compdef ls_gnu_linux=ls
fi

alias l='ls -l'
alias ll='ls -l -a'

# ------------------------------------------------------------------------------------ #
# --                              NeoVim+Tmux integration                           -- #
# ------------------------------------------------------------------------------------ #

if command -v "nvim" 1>/dev/null; then
    if command -v "tmux" 1>/dev/null 2>&1; then
        function nvim_in_tmux() {
            if [ -z "${TMUX}" ]; then
                tmux new-session -d
                tmux send-keys "nvim $@" Enter
                tmux attach
            else
                nvim "$@"
            fi
        }
        alias vim=nvim_in_tmux
        compdef nvim_in_tmux=nvim
    else
        alias vim=nvim
    fi
else
    echo "[ .zsh-alias:${LINENO} ]: Warning: 'nvim' not in \${PATH}"
fi

function tmux_cd_relative {
    local target=${1}
    cd $(tmux display-message -p -F "#{pane_current_path}" -t "{$target}"  || echo ".")
}
alias cdl='tmux_cd_relative left-of'
alias cdr='tmux_cd_relative right-of'
alias cdu='tmux_cd_relative up-of'
alias cdd='tmux_cd_relative down-lf'


# ------------------------------------------------------------------------------------ #
# --                            Change dir FZF style                                -- #
# ------------------------------------------------------------------------------------ #

# * Command 'C' : Use FZF to change directory backwards, from the current directory
# * command 'c' : Use FZF to change directory forwards, from the current directory
function generate_backward_dir_list() {
    local PARAM="$1"
    local REM="$(pwd)"
    local PART=""
    if [ "$PARAM" = "--exclude" ]; then
        while [ ! -z "$REM" ]; do
            echo "$PART"
            IFS="/" read CUR REM <<< "$REM"
            local PART="${PART}${CUR}/"
        done
    else
        while [ ! -z "$REM" ]; do
            IFS="/" read CUR REM <<< "$REM"
            local PART="${PART}${CUR}/"
            echo "$PART"
        done
    fi
}

function fzf_cd_preview {
    fzf --height=40% --reverse --border --info=inline ${1}
}
function fzf_cd_backward {
    cd $(generate_backward_dir_list --exclude | fzf_cd_preview --tac || echo .)
}
function fzf_cd_forward {
    cd $(fd --hidden --no-ignore-vcs --type d . | fzf_cd_preview || echo .)
}
alias C=fzf_cd_backward
alias c=fzf_cd_forward


# ------------------------------------------------------------------------------------ #
# --                                    Misc                                        -- #
# ------------------------------------------------------------------------------------ #

# Quick-open files with GNU xdg-open or BSD open
function o {
    if command -v xdg-open 1>/dev/null 2>&1; then
        # Freedesktop (probably GNU/Linux) environment: GNU 'xargs' with 'xdg-open'
        if [ "$#" -eq 0 ]; then
            if command -v fzf 1>/dev/null 2>&1; then
                fzf --height=15 --print0 |
                    xargs -r -0 -I"{}" sh -c 'xdg-open "{}" 1>/dev/null 2>&1 &'
            else
                echo "Error: 'fzf' not in \${PATH}"
            fi
        else
            xdg-open "$1" 1>/dev/null 2>&1
        fi
    elif command -v open 1>/dev/null 2>&1; then
        # MacOS/BSD environment: BSD 'xargs' with BSD 'open'
        if [ "$#" -eq 0 ]; then
            if command -v fzf 1>/dev/null 2>&1; then
                fzf --height=15 --print0 |
                    xargs -r -0 -I"{}" sh -c 'open "{}" 1>/dev/null 2>&1 &'
            else
                echo "Error: 'fzf' not in \${PATH}"
            fi
        else
            open "$1" 1>/dev/null 2>&1
        fi
    else
        # No 'xdg-open' or 'open' in $PATH
        echo "[ .zsh-alias:${LINENO} ]: Warning: 'xdg-open/open' not in \${PATH}"
    fi
}

# Open current directory with xdg-open/open
if command -v xdg-open 1>/dev/null 2>&1; then
    # Freedesktop environment: GNU 'xdg-open'
    alias op='xdg-open .'
elif command -v open 1>/dev/null 2>&1; then
    # MacOS environment: BSD 'open'
    alias op='open .'
else
    echo "[ .zsh-alias:${LINENO} ]: Warning: 'xdg-open/open' not in \${PATH}"
fi

# Python 3 alias. On certain systems, e.g. Ubuntu, python is not linked to either
# Python 2 nor Python 3
if ! command -v python 1>/dev/null 2>&1; then
    alias python='python3'
fi

# On MacOS Darwin: make an alias python->python3
if [ "$(uname -s)" = "Darwin" ]; then
    alias python='python3'
fi

# (i)Python calculator
PYTHON_CALC_INIT_CMD='import math; import matplotlib.pyplot as plt; import numpy as np;'
if command -v ipython 1>/dev/null 2>&1; then
    # Ipython with Vim keybindings and _without_ QT backend (nice..)
    alias calc="ipython -i -c '${PYTHON_CALC_INIT_CMD}'"
else
    # Regular python calculator (lame..)
    echo "[ .zsh-alias:${LINENO} ]: Warning: 'ipython' not in \${PATH}"
    alias calc="python3 -i -c '${PYTHON_CALC_INIT_CMD}'"
fi

# Create a new directory and change to it
function mkdir_and_cd() {
    local MKPATH="${1}"
    mkdir -p "${MKPATH}"
    cd "${MKPATH}"
}

# Command line quickies
alias ca=cargo
alias t=tmux
alias ta='tmux attach -t'
alias g=git
alias m=mkdir_and_cd

