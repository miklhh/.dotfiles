#
# Tmux config for lazy programmers that often need to work over remote SSH connections. Keybindings in this config are
# inspired by the default i3 keybindings. Keybindings in this config assumes a Swedish keyboard layout, but changing key
# combinations should be trivial if needed.
#
# Author: Mikael Henriksson (www.github.com/miklhh)
#

# -------------------------------
#    Tmux environment settings
# -------------------------------

# Enable tmux true color (available for Tmux v2.2 and newer)
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Rebind Tmux prefix key to <Ctrl+a>
unbind C-b
set -g prefix C-a

# Other settings
setw -g mode-keys vi            # Prefered keybindings in copy-mode
set -g history-limit 20000      # Scrollback history limit
set -sg escape-time 0           # Zero escape code time
set -g base-index 1             # Let window index start from 1
set -g mouse on                 # Enable mouse functionality
set-option -g focus-events on   # Pass focus-events from applications to terminal

# -------------------------------
#    Appearence and status bar
# -------------------------------

# Status bar custom theme
color_status_bar_bg="colour235"
color_status_bar_fg="colour254"
color_status_bar_date_fg="colour215"
color_status_bar_current_bg="colour214"
color_status_bar_current_fg="colour235"
color_status_bar_session_fg="colour45"
color_window_off_status_bar_current_bg="colour254"
color_window_off_status_bar_bg="colour238"
color_off_fg="colour40"
color_off_bg="colour088"
color_secondary="colour215"
separator_powerline_left=""
separator_powerline_right=""

# Status bar custom widgets
wg_session="#[fg=$color_status_bar_session_fg] #S #[default]"
wg_date="#[fg=$color_status_bar_date_fg]%h %d %H:%M#[default]"
wg_user_host="#[fg=$color_secondary]#(whoami)#[default]@#H"
wg_is_zoomed="#[fg=$color_status_bar_current_fg,bg=$color_secondary]#{?window_zoomed_flag,[Z],}#[default]"
wg_is_keys_off="#[fg=$color_off_fg,bg=$color_off_bg]#([ $(tmux show-option -qv key-table) = 'off' ] && echo '[OFF]')#[default]"

# Status bar appearence settings
set -g mode-style fg=$color_status_bar_fg,bg=$color_status_bar_bg
set -g message-style "fg=$color_status_bar_fg,bg=$color_status_bar_bg"
set -g status-style "fg=$color_status_bar_fg,bg=$color_status_bar_bg"
set -g window-status-separator " "
setw -g window-status-format " #I:#W "
setw -g window-status-current-format "#[fg=$color_status_bar_bg,bg=$color_status_bar_current_bg]$separator_powerline_right #I:#W #[fg=$color_status_bar_current_bg,bg=$color_status_bar_bg]$separator_powerline_right#[default]"
set -g status-left "$wg_session"
set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed | #{pane_title} | $wg_user_host | $wg_date "

# Status bar general settings
set -g status on
set -g status-interval 5
set -g status-position bottom
set -g status-justify left
set -g status-right-length 100

# ------------------
#    Key bindings
# ------------------

# <Meta+.> for tmux command mode.
bind-key -n M-. command

# i3 like pane switching.
bind-key -r j select-pane -L
bind-key -r ö select-pane -R
bind-key -r k select-pane -D
bind-key -r l select-pane -U
bind-key -n M-j select-pane -L
bind-key -n M-ö select-pane -R
bind-key -n M-k select-pane -D
bind-key -n M-l select-pane -U

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -L'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -D'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -U'
bind-key -n 'M-ö' if-shell "$is_vim" 'send-keys M-ö'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Pane resizing
bind-key -r J resize-pane -L 10
bind-key -r Ö resize-pane -R 10
bind-key -r K resize-pane -D 5
bind-key -r L resize-pane -U 5

# Select active tmux window.
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9

# Tmux pane-zoom with <Meta+f> as in Fullscreen
bind-key -n M-f resize-pane -Z

# Swap marked pane with another one
bind-key -n M-J swap-pane -s '{left-of}'
bind-key -n M-Ö swap-pane -s '{right-of}'
bind-key -n M-K swap-pane -s '{down-of}'
bind-key -n M-L swap-pane -s '{up-of}'

# Split pane
bind-key -n M-i split -h -c "#{pane_current_path}"
bind-key -n M-u split -c "#{pane_current_path}"

# Move the current pane to window 'n' with <Meta+Shift+'n'> for 'n' in {1,2,3,...,9}. If window 'n' does not exist yet,
# create it first and then move the current paneto it. If window 'n' do exist, the current pane will be attached
# horizonaly to the last selected pane in that window. In both cases, the window which the pane is moved from will
# continue as active window.
bind-key -n M-!  if-shell 'tmux join-pane -h -d -t :1' '' 'new-window -d -t :1 ; join-pane -h -d -t :1 ; kill-pane -t :1'
bind-key -n M-\" if-shell 'tmux join-pane -h -d -t :2' '' 'new-window -d -t :2 ; join-pane -h -d -t :2 ; kill-pane -t :2'
bind-key -n M-#  if-shell 'tmux join-pane -h -d -t :3' '' 'new-window -d -t :3 ; join-pane -h -d -t :3 ; kill-pane -t :3'
bind-key -n M-¤  if-shell 'tmux join-pane -h -d -t :4' '' 'new-window -d -t :4 ; join-pane -h -d -t :4 ; kill-pane -t :4'
bind-key -n M-%  if-shell 'tmux join-pane -h -d -t :5' '' 'new-window -d -t :5 ; join-pane -h -d -t :5 ; kill-pane -t :5'
bind-key -n M-&  if-shell 'tmux join-pane -h -d -t :6' '' 'new-window -d -t :6 ; join-pane -h -d -t :6 ; kill-pane -t :6'
bind-key -n M-/  if-shell 'tmux join-pane -h -d -t :7' '' 'new-window -d -t :7 ; join-pane -h -d -t :7 ; kill-pane -t :7'
bind-key -n M-(  if-shell 'tmux join-pane -h -d -t :8' '' 'new-window -d -t :8 ; join-pane -h -d -t :8 ; kill-pane -t :8'
bind-key -n M-)  if-shell 'tmux join-pane -h -d -t :9' '' 'new-window -d -t :9 ; join-pane -h -d -t :9 ; kill-pane -t :9'

# --------------------------------------------------------------------------------
#    Toggle off tmux keybindings with <Meta-o>. Useful for nested tmux sessions
# --------------------------------------------------------------------------------
bind -T root M-o  \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_status_bar_fg,bg=$color_window_off_status_bar_bg" \;\
  set window-status-current-format "#[fg=$color_window_off_status_bar_bg,bg=$color_window_off_status_bar_current_bg]$separator_powerline_right#[default] #I:#W #[fg=$color_window_off_status_bar_current_bg,bg=$color_window_off_status_bar_bg]$separator_powerline_right#[default]" \;\
  set window-status-current-style "fg=$color_status_bar_current_fg,bold,bg=$color_window_off_status_bar_current_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off M-o \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S
  
# ---------------------
#    Command aliases
# ---------------------
set command-alias[1] cd='attach -c "#{pane_current_path}"'
